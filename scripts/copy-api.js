import { copyFileSync, mkdirSync, existsSync } from 'fs';
import { join, dirname } from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const rootDir = join(__dirname, '..');
const publicApiDir = join(rootDir, 'public', 'api');
const distApiDir = join(rootDir, 'dist', 'api');

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é api –≤ dist, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!existsSync(distApiDir)) {
  mkdirSync(distApiDir, { recursive: true });
}

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
const filesToCopy = [
  'contact.php',
  'test-mail.php',
  '.htaccess'
];

console.log('üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ API —Ñ–∞–π–ª–æ–≤ –≤ dist/...');

filesToCopy.forEach(file => {
  const source = join(publicApiDir, file);
  const destination = join(distApiDir, file);
  
  if (existsSync(source)) {
    copyFileSync(source, destination);
    console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`);
  } else {
    console.warn(`‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${file}`);
  }
});

console.log('‚ú® –ì–æ—Ç–æ–≤–æ! API —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ dist/api/');

